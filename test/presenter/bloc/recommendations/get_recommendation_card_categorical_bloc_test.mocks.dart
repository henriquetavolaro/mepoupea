// Mocks generated by Mockito 5.0.16 from annotations
// in mepoupeapp/test/presenter/bloc/recommendations/get_recommendation_card_categorical_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mepoupeapp/domain/model/recommendation_cards_categorical.dart'
    as _i5;
import 'package:mepoupeapp/domain/use_cases/recommendation.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [GetRecommendationsCardsCategoricalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetRecommendationsCardsCategoricalUseCase extends _i1.Mock
    implements _i3.GetRecommendationsCardsCategoricalUseCase {
  MockGetRecommendationsCardsCategoricalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<Exception, _i5.RecommendationsCardsCategorical>> call(
          String? context) =>
      (super.noSuchMethod(Invocation.method(#call, [context]),
          returnValue:
              Future<_i2.Either<Exception, _i5.RecommendationsCardsCategorical>>.value(
                  _FakeEither_0<Exception,
                      _i5.RecommendationsCardsCategorical>())) as _i4
          .Future<_i2.Either<Exception, _i5.RecommendationsCardsCategorical>>);
  @override
  String toString() => super.toString();
}
